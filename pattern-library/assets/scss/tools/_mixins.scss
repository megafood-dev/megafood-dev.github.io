//------------------------------------------------------------------------------
// Fonts
//------------------------------------------------------------------------------
@mixin primary-font($weight: 400){
    font-family: 'Source Sans Pro', arial, sans-serif;
    font-weight: $weight;//available: 400, 600
}

@mixin secondary-font($weight: 400){
    font-family: 'Montserrat',sans-serif;
    font-weight: $weight;//available: 400, 500, 600, 700, or 800 (used: 400, 500, 600)
}

@mixin tertiary-font($weight: 600){
    font-family: 'Orbi-Regular', serif;
    font-weight: $weight;//available: 600
}


//------------------------------------------------------------------------------
// Button & Link Helpers
//------------------------------------------------------------------------------
@mixin button(){
    display: inline-block;
    text-decoration: none;
    @include secondary-font(600);
    font-size: px-to-rem(18px);
    line-height: 1.5;
    text-align: center;
    padding: px-to-rem(14.5px) px-to-rem(32px);
    color: $white;
    background-color: $zuccini;
    border: none;
    border-radius: px-to-rem(3px);
    margin-bottom: px-to-rem(16px);
    transition: all 0.3s ease;

    &:hover, &:focus {
        color: $white;
        background-color: $black;
        cursor: pointer;
    }

    &[disabled] {
        color: $emperor;
        background-color: $alabaster;

        &:hover, &:focus {
            color: $emperor;
            background-color: $alabaster;
            text-decoration: none;
            cursor: not-allowed;
        }
    }
}

@mixin remove-button(){
    font-weight: inherit;
    text-align: left;
    color: $emperor;
    background-color: transparent;
    padding: 0;
    border: none;
    margin-bottom: 0;

    &:hover, &:focus {
        color: $emperor;
        background-color: transparent;
    }

    &[disabled] {
        color: $dove-gray;
        background-color: transparent;
    }
}

@mixin button-to-link(){//should match link base styles
    @include remove-button();
    @include primary-font(400);
    color: $vidaLoca;
    text-decoration: none;
    text-decoration: underline;
    transition: all .25s ease;

    &:hover, &:focus {
        color: $zuccini;
        cursor: pointer;
        transition: all .25s ease;
    }

    &[disabled] {
        color: $dove-gray;
    }
}


//------------------------------------------------------------------------------
// List Helpers
//------------------------------------------------------------------------------
@mixin remove-list() {//use on ul or ol elements
    list-style: none;
    padding-left: 0;
}

@mixin inline-list() {//use on ul or ol elements
    @include remove-list();

    & > li {
        display: inline-block;
    }
}


//------------------------------------------------------------------------------
// Display
//------------------------------------------------------------------------------
@mixin hide(){//allows content to be read by screen readers but hides it visually for sighted users
    position: absolute;
    clip: rect(0 0 0 0);
    border: 0;
    height: 1px;
    width: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    white-space: nowrap;
}

@mixin show(){//shows content that has previously been hidden with hide()
    position: relative;
    left: auto;
    clip: unset;
    width: auto;
    height: auto;
    overflow: visible;
}


//------------------------------------------------------------------------------
// CSS Shapes
//------------------------------------------------------------------------------
@mixin x-icon($position: 'right', $color: $x-color, $hover-color: $x-color-hover){
    position: relative;

    &::before, &::after {
        content: '';
        position: absolute;
        top: 50%;
        background-color: $color;
        transform: translateY(-50%) rotate(45deg);
    }

    &::before {
        @if $position == 'right' {
            right: px-to-rem(9px);
        } @else {
            left: px-to-rem(9px);
        }
        height: px-to-rem(20px);
        width: px-to-rem(2px);
    }

    &::after {
        @if $position == 'right' {
            right: 0;
        } @else {
            left: 0;
        }
        height: px-to-rem(2px);
        width: px-to-rem(20px);
    }

    &:hover, &:focus {
        &::before, &::after {
            background-color: $hover-color;
        }
    }
}

@mixin arrow($direction: 'right', $color: $black){
    &::before, &::after {
        content: '';
        position: absolute;
        height: px-to-rem(12px);
        width: px-to-rem(2px);
        background-color: $color;
    }

    &::before {
        top: calc(50% - #{px-to-rem(8px)});

        @if $direction == 'right' {
            left: 50%;
            transform: rotate(-45deg) translateX(#{px-to-rem(2px)});
        } @else if $direction == 'left' {
            left: 50%;
            transform: rotate(45deg) translateX(#{px-to-rem(-2px)});
        } @else {
            left: calc(50% - #{px-to-rem(1px)});
            transform: rotate(-45deg) translateX(#{px-to-rem(-6px)});
        }
    }

    &::after {
        top: calc(50% - #{px-to-rem(3px)});

        @if $direction == 'right' {
            left: 50%;
            transform: rotate(45deg) translateX(#{px-to-rem(2px)});
        } @else if $direction == 'left' {
            left: 50%;
            transform: rotate(-45deg) translateX(#{px-to-rem(-2px)});
        } @else {
            left: calc(50% - #{px-to-rem(1px)});
            transform: rotate(45deg) translateX(#{px-to-rem(6px)});
        }
    }
}

@mixin link-arrow($direction: 'right', $color: $vidaLoca, $hover-color: $zuccini){
    position: relative;

    &::before, &::after {
        content: '';
        position: absolute;
        height: 38%;
        width: px-to-rem(2px);
        background-color: $color;
    }

    &::before {
        top: calc(50% - #{px-to-rem(4.5px)});

        @if $direction == 'right' {
            right: px-to-rem(3px);
            transform: rotate(-45deg) translateX(#{px-to-rem(2px)});
        }

        @if $direction == 'left' {
            left: px-to-rem(3px);
            transform: rotate(45deg) translateX(#{px-to-rem(-2px)});
        }
    }

    &::after {
        top: calc(50% - #{px-to-rem(2.5px)});

        @if $direction == 'right' {
            right: px-to-rem(3px);
            transform: rotate(45deg) translateX(#{px-to-rem(2px)});
        }

        @if $direction == 'left' {
            left: px-to-rem(3px);
            transform: rotate(-45deg) translateX(#{px-to-rem(-2px)});
        }
    }

    &:hover, &:focus {
        &::after, &::before {
            background-color: $hover-color;
        }
    }
}
